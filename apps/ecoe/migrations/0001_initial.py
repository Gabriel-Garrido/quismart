# Generated by Django 5.0.6 on 2024-06-30 21:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date de la evaluation')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Duration')),
                ('type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Type de evaluation')),
            ],
            options={
                'verbose_name': 'Evaluation',
                'verbose_name_plural': 'Evaluations',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Evaluator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last_name')),
                ('specialty', models.CharField(max_length=100, verbose_name='Specialty')),
                ('email', models.EmailField(max_length=50, verbose_name='Email')),
            ],
            options={
                'verbose_name': 'Evaluator',
                'verbose_name_plural': 'Evaluators',
                'ordering': ['last_name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last_name')),
                ('registration_number', models.CharField(max_length=20, unique=True, verbose_name='Registration_number')),
                ('email', models.EmailField(max_length=50, verbose_name='Email')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
                'ordering': ['last_name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('evaluator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stations', to='ecoe.evaluator', verbose_name='Evaluator')),
            ],
            options={
                'verbose_name': 'Station',
                'verbose_name_plural': 'Stations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Text de la question')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='ecoe.station', verbose_name='Station')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['station', 'id'],
            },
        ),
        migrations.CreateModel(
            name='EvaluationStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecoe.evaluation', verbose_name='Evaluation')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecoe.station', verbose_name='Station')),
            ],
            options={
                'verbose_name': 'Evaluation-Station',
                'verbose_name_plural': 'Evaluations-Stations',
                'unique_together': {('evaluation', 'station')},
            },
        ),
        migrations.AddField(
            model_name='evaluation',
            name='stations',
            field=models.ManyToManyField(related_name='evaluations', through='ecoe.EvaluationStation', to='ecoe.station'),
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Score')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Feedback')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecoe.evaluation', verbose_name='Evaluation')),
                ('station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecoe.station', verbose_name='Station')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecoe.student', verbose_name='Student')),
            ],
            options={
                'verbose_name': 'Score',
                'verbose_name_plural': 'Scores',
                'ordering': ['student', 'evaluation', 'station'],
                'unique_together': {('student', 'evaluation', 'station')},
            },
        ),
        migrations.AddField(
            model_name='evaluation',
            name='students',
            field=models.ManyToManyField(related_name='evaluations', through='ecoe.Score', to='ecoe.student'),
        ),
    ]
