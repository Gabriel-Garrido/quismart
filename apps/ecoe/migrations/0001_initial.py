# Generated by Django 5.0.6 on 2024-06-30 03:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Estacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Estación',
                'verbose_name_plural': 'Estaciones',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=100, verbose_name='Apellido')),
                ('matricula', models.CharField(max_length=20, unique=True, verbose_name='Matrícula')),
                ('rol', models.CharField(blank=True, max_length=50, null=True, verbose_name='Rol')),
            ],
            options={
                'verbose_name': 'Estudiante',
                'verbose_name_plural': 'Estudiantes',
                'ordering': ['apellido', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='Evaluacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(verbose_name='Fecha de la evaluación')),
                ('duracion', models.DurationField(blank=True, null=True, verbose_name='Duración')),
                ('tipo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tipo de evaluación')),
            ],
            options={
                'verbose_name': 'Evaluación',
                'verbose_name_plural': 'Evaluaciones',
                'ordering': ['fecha'],
            },
        ),
        migrations.CreateModel(
            name='Evaluador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=100, verbose_name='Apellido')),
                ('especialidad', models.CharField(max_length=100, verbose_name='Especialidad')),
            ],
            options={
                'verbose_name': 'Evaluador',
                'verbose_name_plural': 'Evaluadores',
                'ordering': ['apellido', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='EvaluacionEstacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecoe.estacion', verbose_name='Estación')),
                ('evaluacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecoe.evaluacion', verbose_name='Evaluación')),
            ],
            options={
                'verbose_name': 'Evaluación-Estación',
                'verbose_name_plural': 'Evaluaciones-Estaciones',
                'unique_together': {('evaluacion', 'estacion')},
            },
        ),
        migrations.AddField(
            model_name='evaluacion',
            name='estaciones',
            field=models.ManyToManyField(related_name='evaluaciones', through='ecoe.EvaluacionEstacion', to='ecoe.estacion'),
        ),
        migrations.AddField(
            model_name='estacion',
            name='evaluador',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='estaciones', to='ecoe.evaluador', verbose_name='Evaluador'),
        ),
        migrations.CreateModel(
            name='Pregunta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texto', models.TextField(verbose_name='Texto de la pregunta')),
                ('estacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='preguntas', to='ecoe.estacion', verbose_name='Estación')),
            ],
            options={
                'verbose_name': 'Pregunta',
                'verbose_name_plural': 'Preguntas',
                'ordering': ['estacion', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Puntaje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('puntaje', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Puntaje')),
                ('comentario', models.TextField(blank=True, null=True, verbose_name='Comentario')),
                ('feedback', models.TextField(blank=True, null=True, verbose_name='Feedback')),
                ('estacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecoe.estacion', verbose_name='Estación')),
                ('estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecoe.estudiante', verbose_name='Estudiante')),
                ('evaluacion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecoe.evaluacion', verbose_name='Evaluación')),
            ],
            options={
                'verbose_name': 'Puntaje',
                'verbose_name_plural': 'Puntajes',
                'ordering': ['estudiante', 'evaluacion', 'estacion'],
                'unique_together': {('estudiante', 'evaluacion', 'estacion')},
            },
        ),
        migrations.AddField(
            model_name='evaluacion',
            name='estudiantes',
            field=models.ManyToManyField(related_name='evaluaciones', through='ecoe.Puntaje', to='ecoe.estudiante'),
        ),
    ]
